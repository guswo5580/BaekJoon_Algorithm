#include<iostream>

using namespace std;

//군수열의 적용 
//1군 -> 2군 -> 3군 --- 해당 군 내 수열 개수는 군과 같다 
//군 내부의 수열 개수는 이전 군에서 1씩 증가한다 
//짝수 군일 때는 분자는 1씩 증가, 분모는 1씩 감소 
//홀수 군일 때는 분자는 1씩 감소, 분모는 1씩 증가 

/*  풀이
1. 입력값 N에서 군을 증가시키며 몇 번째 군에 위치했는지 찾는다 
2. 입력값과 찾아낸 군의 위치로 해당 군 내 몇 번째에 위치했는지 찾는다 
3. 짝수 일 때는 분자 증가, 분모 감소하며 해당 위치의 값을 찾는다
4. 홀수 일 때는 분자 감소, 분모 증가하며 해당 위치의 값을 찾는다
*/

int main(){

	int N;
	int i = 1; //군수열의 군을 담는 변수 

	//N으로 14를 입력했을 때,
	while (N > 0) {
		N -= i++; //군을 1씩 증가하며 입력값 N에서 뺀다 
	}
	//반복문이 끝났을 때,
	//N = -1, i = 5가 남는다 

	int n = i + N; //n = i 군의 N번 째 위치

	//탐색 방향 결정 
	//분모, 분자는 항상 0보다 큰 정수
	//n이 5일 때, i - n = 0이 되므로 분수의 규칙에 어긋남 
	//따라서 분모, 분자를 계산할 때는 n-1의 값을 i에서 빼준다 
	
	if (i % 2 == 0) //짝수 군의 수열 방향 = 분모의 변화 
		cout << n << "/" << i - (n - 1);

	else //홀수 군의 수열 방향 = 분자의 변화 
		cout << i - (n - 1) << "/" << n; 

	return 0;
}
